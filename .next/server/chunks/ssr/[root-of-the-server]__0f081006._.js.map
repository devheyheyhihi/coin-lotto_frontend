{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport Link from 'next/link';\nimport Image from 'next/image';\n\ninterface HeaderProps {\n  account: string | null;\n  connectWallet: () => void;\n}\n\nconst Header = ({ account, connectWallet }: HeaderProps) => {\n  const buttonStyle = account\n    ? \"hover:cursor-pointer rounded-[21px] border border-white bg-gradient-to-r from-[#1AEBA9] to-[#384FC0] shadow-[0_4px_4px_0_rgba(0,0,0,0.25)] w-[139px] h-[34px] flex-shrink-0 text-white font-bold flex items-center justify-center\"\n    : \"hover:cursor-pointer rounded-[21px] bg-black w-[139px] h-[34px] flex-shrink-0 text-white flex items-center justify-center\";\n\n  return (\n    <header className=\"flex items-center justify-between px-[5vw] py-[5.5vh] font-bold\">\n      <Image\n        src=\"/header_logo.svg\"\n        alt=\"TetherLuck Logo\"\n        width={135}\n        height={40}\n        className=\"h-auto w-[10vw]\"\n      />\n      <nav className=\"flex items-center space-x-10\">\n        <Link href=\"/how-to-play\" className=\"text-white\">\n          참여 방법\n        </Link>\n        <button\n          onClick={connectWallet}\n          className={buttonStyle}\n        >\n          {account ? '게임 시작' : '지갑 연결'}\n        </button>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header; "],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAUA,MAAM,SAAS,CAAC,EAAE,OAAO,EAAE,aAAa,EAAe;IACrD,MAAM,cAAc,UAChB,sOACA;IAEJ,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAI;gBACJ,KAAI;gBACJ,OAAO;gBACP,QAAQ;gBACR,WAAU;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAe,WAAU;kCAAa;;;;;;kCAGjD,8OAAC;wBACC,SAAS;wBACT,WAAW;kCAEV,UAAU,UAAU;;;;;;;;;;;;;;;;;;AAK/B;uCAEe","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/HeroSection.tsx"],"sourcesContent":["'use client';\n\nconst HeroSection = () => (\n  <div className=\"text-center py-12\">\n    <h1 className=\"text-6xl font-extrabold\">TetherLuck</h1>\n  </div>\n);\n\nexport default HeroSection; "],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,cAAc,kBAClB,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAG,WAAU;sBAA0B;;;;;;;;;;;uCAI7B","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/WinnerInfoBar.tsx"],"sourcesContent":["'use client';\n\nconst WinnerInfoBar = () => (\n  <div className=\"mx-auto text-lg font-['Pretendard'] font-extrabold leading-normal px-[5vw] flex h-14 w-full max-w-[1483px] items-center justify-between border-t-2 border-[#33B8D7] bg-gradient-to-t from-black/[.72] to-[#1830C9] px-6 text-sm shadow-[inset_0_4px_4px_0_rgba(0,0,0,0.25),0_-5px_4px_0_rgba(0,0,0,0.25)]\">\n      <div className=\"flex items-center space-x-6\">\n        <button className=\"text-xl text-[#8CFBFF]\">◀</button>\n        <span className=\"text-sm text-[#AAAAA5]\">회차 21회</span>\n        <span className=\"text-xl text-[#8CFBFF]\">회차 20회</span>\n        <span className=\"text-sm text-[#AAAAA5]\">회차 19회</span>\n        <button className=\"text-xl text-[#8CFBFF]\">▶</button>\n      </div>\n      <div className=\"flex items-center space-x-10\">\n        <div className=\"flex items-center space-x-4\">\n          <button className=\"text-xl text-[#8CFBFF]\">◀</button>\n          <span>USDT 100</span>\n          <button className=\"text-xl text-[#8CFBFF]\">▶</button>\n        </div>\n        <span>당첨자 정보</span>\n        <span className=\"text-xl text-yellow-400\">🏆 Winner</span>\n        <span>aswflqs</span>\n        <span>1,000만원</span>\n      </div>\n  </div>\n);\n\nexport default WinnerInfoBar; "],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,gBAAgB,kBACpB,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAO,WAAU;kCAAyB;;;;;;kCAC3C,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;kCACzC,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;kCACzC,8OAAC;wBAAK,WAAU;kCAAyB;;;;;;kCACzC,8OAAC;wBAAO,WAAU;kCAAyB;;;;;;;;;;;;0BAE7C,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAO,WAAU;0CAAyB;;;;;;0CAC3C,8OAAC;0CAAK;;;;;;0CACN,8OAAC;gCAAO,WAAU;0CAAyB;;;;;;;;;;;;kCAE7C,8OAAC;kCAAK;;;;;;kCACN,8OAAC;wBAAK,WAAU;kCAA0B;;;;;;kCAC1C,8OAAC;kCAAK;;;;;;kCACN,8OAAC;kCAAK;;;;;;;;;;;;;;;;;;uCAKC","debugId":null}},
    {"offset": {"line": 267, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/EntrySection.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\n\ninterface EntrySectionProps {\n  ref: any;\n  participationOptions: { id: string; amount: number; participants: string }[];\n  handleEnterRoom: (roomId: string) => void;\n}\n\nconst EntrySection = ({ ref, participationOptions, handleEnterRoom }: EntrySectionProps) => (\n  <div className=\"relative text-center\">\n    <div className=\"bg-[linear-gradient(#3B529E,#D9D9D950,#D9D9D940,#D9D9D930,#D9D9D910,#D9D9D900)]\">\n        <div className=\"mx-auto flex h-14 w-full max-w-[1470px] items-center justify-center bg-gradient-to-r from-[#3869A9] to-[#035ED5] shadow-[inset_0_4px_4px_0_rgba(0,0,0,0.25),0_1px_8.5px_0_rgba(0,0,0,0.73)]\">\n            <h2 className=\"text-2xl font-bold\">20회</h2>\n        </div>\n\n        <div className=\"px-6 py-12 md:px-12 lg:px-24\">\n          <p className=\"font-['Pretendard'] text-xl font-semibold leading-normal text-white [text-shadow:0_4px_4px_rgba(0,0,0,0.25)]\">2025.07.23</p>\n          <div className=\"mb-12 font-['LABDigital'] text-[64px] font-normal leading-normal text-[#2BF7FF] tracking-widest\">\n            <span>00</span>:<span>01</span>:<span>40</span>\n          </div>\n        </div>\n    </div>\n\n    {/* Participation Options */}\n    <div className=\"px-6 pb-12 md:px-10 lg:px-24\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        {participationOptions.map((option, index) => {\n          const fromColors = [\n            \"from-[rgba(14,45,244,0.30)]\",    // Blue\n            \"from-[rgba(253,223,106,0.30)]\", // Yellow\n            \"from-[rgba(14,244,22,0.30)]\",    // Green\n            \"from-[rgba(235,29,29,0.30)]\",     // Red\n          ];\n          \n          return (\n            <div\n              ref={ref}\n              key={option.id}\n              className={`font-['Pretendard'] text-2xl font-bold leading-normal text-white rounded-[25px] border-2 border-white bg-gradient-to-b to-[rgba(0,0,0,0.20)] p-6 shadow-[inset_0_4px_4px_0_rgba(0,0,0,0.25),0_4px_6.7px_3px_rgba(0,0,0,0.25)] ${fromColors[index]}`}\n            >\n              <div className=\"text-left\">\n                <p className=\"[text-shadow:0_4px_4px_rgba(0,0,0,0.25)]\">USDT</p>\n                <p className=\"[text-shadow:0_4px_4px_rgba(0,0,0,0.25)]\">{option.amount}</p>\n                <div className=\"mx-auto mb-4 flex h-full w-full items-center justify-center rounded-full\">\n                  <Image src=\"/temp_img.svg\" alt=\"Tether Icon\" width={220} height={220} className=\"h-full w-full\" />\n                </div>\n                <button\n                  onClick={() => handleEnterRoom(option.id)}\n                  className=\"mb-2 w-full rounded-lg bg-gradient-to-r from-[#323232] to-black py-2 px-6 font-['Pretendard'] text-base font-semibold leading-normal text-[#FC0] shadow-[inset_0_4px_4px_0_rgba(0,0,0,0.25),0_4px_4px_0_rgba(0,0,0,0.25)]\"\n                >\n                  참여하기\n                </button>\n                <p className=\"text-center text-[#FFE206]\">{option.participants} 명</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  </div>\n);\n\nexport default EntrySection; "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUA,MAAM,eAAe,CAAC,EAAE,GAAG,EAAE,oBAAoB,EAAE,eAAe,EAAqB,iBACrF,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAG,WAAU;sCAAqB;;;;;;;;;;;kCAGvC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAE,WAAU;0CAA+G;;;;;;0CAC5H,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;oCAAS;kDAAC,8OAAC;kDAAK;;;;;;oCAAS;kDAAC,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;0BAM9C,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;8BACZ,qBAAqB,GAAG,CAAC,CAAC,QAAQ;wBACjC,MAAM,aAAa;4BACjB;4BACA;4BACA;4BACA;yBACD;wBAED,qBACE,8OAAC;4BACC,KAAK;4BAEL,WAAW,CAAC,8NAA8N,EAAE,UAAU,CAAC,MAAM,EAAE;sCAE/P,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDAA2C;;;;;;kDACxD,8OAAC;wCAAE,WAAU;kDAA4C,OAAO,MAAM;;;;;;kDACtE,8OAAC;wCAAI,WAAU;kDACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;4CAAC,KAAI;4CAAgB,KAAI;4CAAc,OAAO;4CAAK,QAAQ;4CAAK,WAAU;;;;;;;;;;;kDAElF,8OAAC;wCACC,SAAS,IAAM,gBAAgB,OAAO,EAAE;wCACxC,WAAU;kDACX;;;;;;kDAGD,8OAAC;wCAAE,WAAU;;4CAA8B,OAAO,YAAY;4CAAC;;;;;;;;;;;;;2BAf5D,OAAO,EAAE;;;;;oBAmBpB;;;;;;;;;;;;;;;;;uCAMO","debugId":null}},
    {"offset": {"line": 455, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/SideMenu.tsx"],"sourcesContent":["'use client';\n\ninterface SideMenuProps {\n  onOpenMyPage: () => void;\n}\n\nconst SideMenu = ({ onOpenMyPage }: SideMenuProps) => (\n  <aside className=\"fixed right-8 top-1/2 -translate-y-1/2 space-y-4\">\n    <button className=\"bg-blue-700 p-3 rounded-lg flex flex-col items-center\">\n      {/* Placeholder for Icon */}\n      <span>➕</span>\n      <span className=\"text-xs mt-1\">게임설명</span>\n    </button>\n    <button\n      onClick={onOpenMyPage}\n      className=\"bg-blue-700 p-3 rounded-lg flex flex-col items-center\"\n    >\n      {/* Placeholder for Icon */}\n      <span>👤</span>\n      <span className=\"text-xs mt-1\">마이페이지</span>\n    </button>\n  </aside>\n);\n\nexport default SideMenu; "],"names":[],"mappings":";;;;AAAA;;AAMA,MAAM,WAAW,CAAC,EAAE,YAAY,EAAiB,iBAC/C,8OAAC;QAAM,WAAU;;0BACf,8OAAC;gBAAO,WAAU;;kCAEhB,8OAAC;kCAAK;;;;;;kCACN,8OAAC;wBAAK,WAAU;kCAAe;;;;;;;;;;;;0BAEjC,8OAAC;gBACC,SAAS;gBACT,WAAU;;kCAGV,8OAAC;kCAAK;;;;;;kCACN,8OAAC;wBAAK,WAAU;kCAAe;;;;;;;;;;;;;;;;;;uCAKtB","debugId":null}},
    {"offset": {"line": 524, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/components/MyPageModal.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\n\nconst API_BASE_URL = 'http://localhost:3001'; // This might need configuration\n\n// --- Type Definitions ---\ninterface Room {\n  id: string;\n  name: string;\n  ticketPrice: string;\n}\n\ninterface HistoryItem {\n    roundNumber: number;\n    roomName: string;\n    ticketPrice: string;\n    wasWinner: boolean;\n}\n\ninterface MyPageModalProps {\n    account: string;\n    onClose: () => void;\n}\n\n// --- MyPage Modal Component ---\nconst MyPageModal = ({ account, onClose }: MyPageModalProps) => {\n    const [activeMainTab, setActiveMainTab] = useState('history'); // 'history' or 'wallet'\n    const [allHistory, setAllHistory] = useState<HistoryItem[]>([]);\n    const [rooms, setRooms] = useState<Room[]>([]);\n    const [activeRoomId, setActiveRoomId] = useState<string>('');\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        if (!account) return;\n        \n        const fetchHistoryAndRooms = async () => {\n            setIsLoading(true);\n            setError(null);\n            try {\n                const [historyRes, roomsRes] = await Promise.all([\n                    fetch(`${API_BASE_URL}/user-history/${account}`),\n                    fetch(`${API_BASE_URL}/rooms`)\n                ]);\n\n                if (!historyRes.ok) throw new Error('Failed to fetch history.');\n                if (!roomsRes.ok) throw new Error('Failed to fetch rooms.');\n\n                const historyData = await historyRes.json();\n                const roomsData = await roomsRes.json();\n                \n                setAllHistory(historyData.history || []);\n                setRooms(roomsData || []);\n                if (roomsData.length > 0 && !activeRoomId) {\n                    setActiveRoomId(roomsData[0].id);\n                }\n\n            } catch (err: any) {\n                setError(err.message);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n        fetchHistoryAndRooms();\n    }, [account, activeRoomId]);\n\n    const filteredHistory = allHistory.filter(item => {\n        const activeRoom = rooms.find(r => r.id === activeRoomId);\n        return activeRoom ? item.roomName.includes(activeRoom.name) : false;\n    });\n\n    return (\n        <div className=\"fixed inset-0 bg-black bg-opacity-70 flex justify-center items-center z-50\" onClick={onClose}>\n            <div className=\"bg-gray-800 rounded-lg w-full max-w-2xl text-left shadow-xl flex flex-col\" onClick={(e) => e.stopPropagation()}>\n                {/* Header and Main Tabs */}\n                <div className=\"flex justify-between items-center p-4 border-b border-gray-700\">\n                    <div className=\"flex gap-6\">\n                        <button onClick={() => setActiveMainTab('history')} className={`text-xl font-semibold pb-2 ${activeMainTab === 'history' ? 'text-white border-b-2 border-white' : 'text-gray-500 hover:text-white'}`}>\n                            History\n                        </button>\n                        <button onClick={() => setActiveMainTab('wallet')} className={`text-xl font-semibold pb-2 ${activeMainTab === 'wallet' ? 'text-white border-b-2 border-white' : 'text-gray-500 hover:text-white'}`}>\n                            Wallet\n                        </button>\n                    </div>\n                    <button onClick={onClose} className=\"text-gray-400 hover:text-white text-3xl\">&times;</button>\n                </div>\n\n                {/* Content Area */}\n                <div className=\"p-6 h-[500px] overflow-y-auto\">\n                    {activeMainTab === 'history' && (\n                        <div>\n                            <div className=\"flex border-b border-gray-600 mb-4\">\n                                {rooms.map(room => (\n                                    <button\n                                        key={room.id}\n                                        onClick={() => setActiveRoomId(room.id)}\n                                        className={`py-2 px-4 font-semibold transition-colors duration-200 ${activeRoomId === room.id ? 'border-b-2 border-yellow-400 text-yellow-400' : 'text-gray-400 hover:text-white'}`}\n                                    >\n                                        {room.name}\n                                    </button>\n                                ))}\n                            </div>\n                            {isLoading ? <div className=\"w-8 h-8 border-4 border-yellow-400 border-t-transparent rounded-full animate-spin mx-auto my-4\"></div>\n                            : error ? <p className=\"text-red-500 text-center\">{error}</p>\n                            : filteredHistory.length > 0 ? (\n                                <ul className=\"space-y-3 pr-2\">\n                                    {filteredHistory.map((item, index) => (\n                                        <li key={index} className={`p-4 rounded-md flex justify-between items-center ${item.wasWinner ? 'bg-yellow-500 text-black' : 'bg-gray-700'}`}>\n                                            <div className=\"flex items-center gap-4\">\n                                                <span className=\"bg-black text-white text-center font-bold rounded-md px-3 py-2\">Round #{item.roundNumber}</span>\n                                                <div>\n                                                    <p className=\"font-semibold\">Winning # <span className=\"text-lg\">{item.roundNumber}</span></p> {/* Placeholder */}\n                                                </div>\n                                                <div>\n                                                    <p className=\"font-semibold\">My # <span className=\"text-lg\">{item.roundNumber}</span></p> {/* Placeholder */}\n                                                </div>\n                                            </div>\n                                            <span className=\"text-2xl font-bold\">{item.wasWinner ? 'WIN' : 'LOSE'}</span>\n                                        </li>\n                                    ))}\n                                </ul>\n                            ) : <p className=\"text-gray-500 text-center py-4\">No participation history for this room.</p>}\n                        </div>\n                    )}\n                    {activeMainTab === 'wallet' && (\n                        <div>\n                            <h3 className=\"text-xl font-bold mb-4\">Connected Wallet</h3>\n                            <div className=\"bg-gray-700 p-4 rounded-lg\">\n                                <p className=\"text-gray-400\">Address:</p>\n                                <p className=\"text-white font-mono break-all\">{account}</p>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MyPageModal; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///Users/sinseonghyeon/Documents/GitHub/01-blockchain-projects/maxpia-project/coin_lotto/frontend/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Header from '@/components/Header';\nimport HeroSection from '@/components/HeroSection';\nimport WinnerInfoBar from '@/components/WinnerInfoBar';\nimport EntrySection from '@/components/EntrySection';\nimport SideMenu from '@/components/SideMenu';\nimport MyPageModal from '@/components/MyPageModal';\n\n// --- Type Definitions ---\ndeclare global {\n  interface Window {\n    ethereum?: any;\n  }\n}\n\n// --- Main Page Component ---\nexport default function MainPage() {\n  const [account, setAccount] = useState<string | null>(null);\n  const [isMyPageVisible, setIsMyPageVisible] = useState(false);\n  const router = useRouter();\n  const entrySectionRef = useRef<HTMLDivElement>(null);\n\n  const handleEnterRoom = (roomId: string) => {\n    router.push(`/room/${roomId}`);\n  };\n\n  const connectWallet = async () => {\n    // If account already exists, scroll to entry section\n    if (account) {\n      entrySectionRef.current?.scrollIntoView({ behavior: 'smooth' });\n      return;\n    }\n\n    // If no account, proceed with connection logic\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        setAccount(accounts[0]);\n      } catch (err) {\n        console.error('Failed to connect wallet.', err);\n      }\n    } else {\n      alert('Please install MetaMask.');\n    }\n  };\n\n  const handleOpenMyPage = () => {\n    if (account) {\n      setIsMyPageVisible(true);\n    } else {\n      alert('Please connect your wallet first.');\n    }\n  };\n\n  useEffect(() => {\n    const handleAccountsChanged = (accounts: string[]) => {\n      setAccount(accounts.length > 0 ? accounts[0] : null);\n    };\n\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n      // Check for existing accounts on initial load\n      (async () => {\n        const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n        handleAccountsChanged(accounts);\n      })();\n\n      return () => {\n        // Clean up the event listener\n        if (window.ethereum.removeListener) {\n          window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n        }\n      };\n    }\n  }, []);\n\n  const participationOptions = [\n    { id: '1', amount: 1, participants: '1,144,999' },\n    { id: '2', amount: 10, participants: '1,144,999' },\n    { id: '3', amount: 50, participants: '1,144,999' },\n    { id: '4', amount: 1000, participants: '1,144,999' },\n  ];\n\n  return (\n    <div className=\"bg-[#1a1a2e] min-h-screen text-white font-sans bg-[url('/bg.png')] bg-[length:100%_100%] bg-fixed\">\n      <Header account={account} connectWallet={connectWallet} />\n\n      <main className=\"py-8\">\n        <HeroSection />\n        <WinnerInfoBar />\n        <div ref={entrySectionRef}>\n          <EntrySection participationOptions={participationOptions} handleEnterRoom={handleEnterRoom} />\n        </div>\n      </main>\n\n      <SideMenu onOpenMyPage={handleOpenMyPage} />\n\n      {isMyPageVisible && account && (\n        <MyPageModal \n            account={account} \n            onClose={() => setIsMyPageVisible(false)} \n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;;;;;;;;;;AAmBe,SAAS;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IACtD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,kBAAkB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAkB;IAE/C,MAAM,kBAAkB,CAAC;QACvB,OAAO,IAAI,CAAC,CAAC,MAAM,EAAE,QAAQ;IAC/B;IAEA,MAAM,gBAAgB;QACpB,qDAAqD;QACrD,IAAI,SAAS;YACX,gBAAgB,OAAO,EAAE,eAAe;gBAAE,UAAU;YAAS;YAC7D;QACF;QAEA,+CAA+C;QAC/C,IAAI,OAAO,OAAO,QAAQ,KAAK,aAAa;YAC1C,IAAI;gBACF,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;oBAAE,QAAQ;gBAAsB;gBAC/E,WAAW,QAAQ,CAAC,EAAE;YACxB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,6BAA6B;YAC7C;QACF,OAAO;YACL,MAAM;QACR;IACF;IAEA,MAAM,mBAAmB;QACvB,IAAI,SAAS;YACX,mBAAmB;QACrB,OAAO;YACL,MAAM;QACR;IACF;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,wBAAwB,CAAC;YAC7B,WAAW,SAAS,MAAM,GAAG,IAAI,QAAQ,CAAC,EAAE,GAAG;QACjD;QAEA,IAAI,OAAO,QAAQ,EAAE;YACnB,OAAO,QAAQ,CAAC,EAAE,CAAC,mBAAmB;YACtC,8CAA8C;YAC9C,CAAC;gBACC,MAAM,WAAW,MAAM,OAAO,QAAQ,CAAC,OAAO,CAAC;oBAAE,QAAQ;gBAAe;gBACxE,sBAAsB;YACxB,CAAC;YAED,OAAO;gBACL,8BAA8B;gBAC9B,IAAI,OAAO,QAAQ,CAAC,cAAc,EAAE;oBAClC,OAAO,QAAQ,CAAC,cAAc,CAAC,mBAAmB;gBACpD;YACF;QACF;IACF,GAAG,EAAE;IAEL,MAAM,uBAAuB;QAC3B;YAAE,IAAI;YAAK,QAAQ;YAAG,cAAc;QAAY;QAChD;YAAE,IAAI;YAAK,QAAQ;YAAI,cAAc;QAAY;QACjD;YAAE,IAAI;YAAK,QAAQ;YAAI,cAAc;QAAY;QACjD;YAAE,IAAI;YAAK,QAAQ;YAAM,cAAc;QAAY;KACpD;IAED,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,4HAAA,CAAA,UAAM;gBAAC,SAAS;gBAAS,eAAe;;;;;;0BAEzC,8OAAC;gBAAK,WAAU;;kCACd,8OAAC,iIAAA,CAAA,UAAW;;;;;kCACZ,8OAAC,mIAAA,CAAA,UAAa;;;;;kCACd,8OAAC;wBAAI,KAAK;kCACR,cAAA,8OAAC,kIAAA,CAAA,UAAY;4BAAC,sBAAsB;4BAAsB,iBAAiB;;;;;;;;;;;;;;;;;0BAI/E,8OAAC,8HAAA,CAAA,UAAQ;gBAAC,cAAc;;;;;;YAEvB,mBAAmB,yBAClB,8OAAC,iIAAA,CAAA,UAAW;gBACR,SAAS;gBACT,SAAS,IAAM,mBAAmB;;;;;;;;;;;;AAK9C","debugId":null}}]
}